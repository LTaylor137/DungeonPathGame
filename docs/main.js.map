{"version":3,"sources":["./src/app/components/Classes/Item.ts","./src/environments/environment.ts","./src/app/components/Classes/Level.ts","./src/app/components/room-event/room-event.component.html","./src/app/components/room-event/room-event.component.ts","./src/app/services/RoomEvent.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/services/Options.service.ts","./src/app/app.module.ts","./src/app/components/title/title.component.html","./src/app/components/title/title.component.ts","./src/app/components/options/options.component.html","./src/app/components/options/options.component.ts","./src/app/services/DungeonPath.service.ts","./src/app/components/leaderline/leaderline.component.html","./src/app/components/DungeonPath/dungeon-path.component.html","./src/app/components/DungeonPath/dungeon-path.component.ts","./src/app/components/Classes/Connection.ts","./src/app/components/Classes/Room.ts","./src/app/services/PlayerInventory.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\nexport class Item {\r\n     itemType: string;\r\n     itemName: string;\r\n     itemDescription: string;\r\n     itemTier: number;\r\n     itemAttackValue: number;\r\n     itemDefenceValue: number;\r\n\r\n     constructor(\r\n          _itemType: string,\r\n          _itemName: string,\r\n          _itemDescription: string,\r\n          _itemTier: number,\r\n          _itemAttackValue: number,\r\n          _itemDefenceValue: number)\r\n          {\r\n          this.itemType = _itemType;\r\n          this.itemName = _itemName;\r\n          this.itemDescription = _itemDescription;\r\n          this.itemTier = _itemTier;\r\n          this.itemAttackValue = _itemAttackValue;\r\n          this.itemDefenceValue = _itemDefenceValue;\r\n     }\r\n\r\ngetItemImage(itemName){\r\n\r\n     return \"assets/images/equipment/\" + itemName + \".png\"\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Room } from './Room';\r\n\r\nexport class Level {\r\n    levelNo: number;\r\n    public roomList: Room[] = [];\r\n    \r\n    constructor(_levelNo: number)\r\n        {\r\n        this.levelNo = _levelNo;\r\n        }\r\n}\r\n\r\n","<div class=\"room-event-container\">\r\n\r\n    <div class=\"cave-background-container\">\r\n        <img class=\"cave-background-image\" src=\"{{ this.RoomEventService.roomBackground }}\" />\r\n    </div>\r\n\r\n    <!-- dev info -->\r\n    <div class=\"dev-info\" *ngIf=\"DungeonPathService.showDevInfo === true\">\r\n        {{this.RoomEventService.roomType}} <br>\r\n        currentLevel = {{this.RoomEventService.currentLevel}} <br>\r\n        currentRoom = {{this.RoomEventService.currentRoom}}\r\n    </div>\r\n\r\n    <!-- HEADER -->\r\n    <!-- TURN INFO -->\r\n    <div class=\"stat-row\">\r\n\r\n        <div class=\"stat-row-spacer\">\r\n        </div>\r\n\r\n        <div class=\"stat-container\">\r\n            <p *ngIf=\"this.RoomEventService.isPlayerTurn === true \r\n            && this.RoomEventService.roomType != 'treasure' \r\n            && this.RoomEventService.roomType != 'fire'\" class=\"stat-text\"> Player Turn </p>\r\n        </div>\r\n\r\n        <div class=\"stat-container\">\r\n            <p *ngIf=\"this.RoomEventService.isPlayerTurn === false && this.RoomEventService.monsterHealthValue > 0 \r\n                && this.RoomEventService.roomType != 'treasure' && this.RoomEventService.roomType != 'fire'\"\r\n                class=\"stat-text\"> Monster Turn </p>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- BODY -->\r\n    <div class=\"flexrow\">\r\n\r\n        <!-- Equipment Column -->\r\n        <div class=\"equip-column\">\r\n\r\n            <!-- helm -->\r\n            <div class=\"equip-slot\"\r\n                [style.background-color]=\"this.PlayerInventoryService.getItemColour(this.PlayerInventoryService.helm.itemTier)\">\r\n                <img class=\"item-image\" src=\"assets/images/equipment/{{this.PlayerInventoryService.helm.itemName}}.png\">\r\n            </div>\r\n            <div class=\"tooltip\">\r\n                <div class=\"tooltipArrow\"></div>\r\n                <a class=\"tooltipTitle\">{{this.PlayerInventoryService.helm.itemName}}<br></a>\r\n                <a class=\"tooltipText\">Defence Value: {{this.PlayerInventoryService.helm.itemDefenceValue}}<br></a>\r\n                <a class=\"tooltipDesc\">\"{{this.PlayerInventoryService.helm.itemDescription}}\"</a>\r\n            </div>\r\n\r\n            <!-- armour -->\r\n            <div class=\"equip-slot\"\r\n                [style.background-color]=\"this.PlayerInventoryService.getItemColour(this.PlayerInventoryService.armour.itemTier)\">\r\n                <img class=\"item-image\"\r\n                    src=\"assets/images/equipment/{{this.PlayerInventoryService.armour.itemName}}.png\">\r\n            </div>\r\n            <div class=\"tooltip\">\r\n                <div class=\"tooltipArrow\"></div>\r\n                <a class=\"tooltipTitle\">{{this.PlayerInventoryService.armour.itemName}}<br></a>\r\n                <a class=\"tooltipText\">Defence Value: {{this.PlayerInventoryService.armour.itemDefenceValue}}<br></a>\r\n                <a class=\"tooltipDesc\">\"{{this.PlayerInventoryService.armour.itemDescription}}\"</a>\r\n            </div>\r\n\r\n            <!-- offhand -->\r\n            <div class=\"equip-slot\"\r\n                [style.background-color]=\"this.PlayerInventoryService.getItemColour(this.PlayerInventoryService.offhand.itemTier)\">\r\n                <img class=\"item-image\"\r\n                    src=\"assets/images/equipment/{{this.PlayerInventoryService.offhand.itemName}}.png\">\r\n                <button class=\"equip-button\" (click)=\"Offhand()\" *ngIf=\"this.RoomEventService.isPlayerTurn === true \r\n                && this.PlayerInventoryService.offhand.itemTier < 4 && this.RoomEventService.isPlayerActionSubmitted === false\">\r\n                </button>\r\n            </div>\r\n            <div class=\"tooltip\">\r\n                <div class=\"tooltipArrow\"></div>\r\n                <a class=\"tooltipTitle\">{{this.PlayerInventoryService.offhand.itemName}}<br></a>\r\n                <a *ngIf=\"this.PlayerInventoryService.offhand.itemAttackValue > 0\" class=\"tooltipText\">Attack Value:\r\n                    {{this.PlayerInventoryService.offhand.itemAttackValue}}<br></a>\r\n                <a *ngIf=\"this.PlayerInventoryService.offhand.itemDefenceValue > 0\" class=\"tooltipText\">Defence Value:\r\n                    {{this.PlayerInventoryService.offhand.itemDefenceValue}}<br></a>\r\n                <a class=\"tooltipDesc\">\"{{this.PlayerInventoryService.offhand.itemDescription}}\"</a>\r\n            </div>\r\n\r\n            <!-- weapon -->\r\n            <div class=\"equip-slot\"\r\n                [style.background-color]=\"this.PlayerInventoryService.getItemColour(this.PlayerInventoryService.weapon.itemTier)\">\r\n                <img class=\"item-image\"\r\n                    src=\"assets/images/equipment/{{this.PlayerInventoryService.weapon.itemName}}.png\">\r\n                <button class=\"equip-button\" (click)=\"Attack()\" *ngIf=\"this.RoomEventService.isPlayerTurn === true && this.RoomEventService.isPlayerActionSubmitted === false\">\r\n                </button>\r\n            </div>\r\n            <div class=\"tooltip\">\r\n                <div class=\"tooltipArrow\"></div>\r\n                <a class=\"tooltipTitle\">{{this.PlayerInventoryService.weapon.itemName}}<br></a>\r\n                <a class=\"tooltipText\">Attack Value: {{this.PlayerInventoryService.weapon.itemAttackValue}}<br></a>\r\n                <a class=\"tooltipDesc\">\"{{this.PlayerInventoryService.weapon.itemDescription}}\"</a>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Player Avatar Column -->\r\n        <div class=\"avatar-column\">\r\n\r\n            <div class=\"status-box\">\r\n                <div *ngIf=\"this.RoomEventService.isPlayerBlocking === true\"> Blocking <br> </div>\r\n                <div *ngIf=\"this.RoomEventService.isAttackAvoided === true\"> Avoided Attack </div>\r\n                <div *ngIf=\"this.RoomEventService.roomType === 'fire'\"> Resting </div>\r\n            </div>\r\n\r\n            <div\r\n                *ngIf=\"this.PlayerInventoryService.playerHealth <= 0 && this.PlayerInventoryService.isGodmodeOn === false\">\r\n                <img class=\"player-dead\" src=\"{{ this.PlayerInventoryService.playerAvatar }}\" />\r\n            </div>\r\n\r\n            <div *ngIf=\"this.PlayerInventoryService.playerHealth > 0 || this.PlayerInventoryService.isGodmodeOn === true\"\r\n                id=\"playerAvatar\" class=\"avatar\">\r\n\r\n                <div class=\"equip-in-use\"></div>\r\n\r\n                <img class=\"avatar-attacking\" *ngIf=\"this.RoomEventService.isPlayerAttacking === true\"\r\n                    src=\"{{ this.PlayerInventoryService.playerAvatar }}\" />\r\n\r\n                <img class=\"avatar\" *ngIf=\"this.RoomEventService.isPlayerAttacking === false &&\r\n                this.RoomEventService.isAttackAvoided === false\"\r\n                    src=\"{{ this.PlayerInventoryService.playerAvatar }}\" />\r\n\r\n                <img class=\"avatar-avoiding\" *ngIf=\"this.RoomEventService.isPlayerAttacking === false &&\r\n                    this.RoomEventService.isAttackAvoided === true\"\r\n                    src=\"{{ this.PlayerInventoryService.playerAvatar }}\" />\r\n\r\n                <div>\r\n                    <img *ngIf=\"this.RoomEventService.isPlayerBlocking === true && \r\n                                this.RoomEventService.isPlayerAttacking === false\" class=\"eqiup-blocking\"\r\n                        src=\"assets/images/equipment/{{this.PlayerInventoryService.offhand.itemName}}.png\">\r\n                    <img *ngIf=\"this.RoomEventService.isPlayerAttacking === true &&\r\n                        this.PlayerInventoryService.weapon.itemTier < 3\" class=\"eqiup-attacking\"\r\n                        src=\"assets/images/equipment/{{this.PlayerInventoryService.weapon.itemName}}.png\">\r\n                    <img *ngIf=\"this.RoomEventService.isPlayerAttacking === true &&\r\n                        this.PlayerInventoryService.weapon.itemTier >= 3\" class=\"eqiup-attacking-2\"\r\n                        src=\"assets/images/equipment/{{this.PlayerInventoryService.weapon.itemName}}.png\">\r\n                    <img *ngIf=\"this.RoomEventService.isDamageNegated === true\" class=\"damage-deflect\"\r\n                        src=\"assets/images/effects/Block Effect.png\">\r\n                    <img *ngIf=\"this.RoomEventService.isPlayerTakeDamage === true\" class=\"damage-hit\"\r\n                        src=\"assets/images/effects/Hit Effect.png\">\r\n                    <img *ngIf=\"this.RoomEventService.isHandgunInUse === true\" class=\"eqiup-handgun\"\r\n                        src=\"assets/images/equipment/{{this.PlayerInventoryService.offhand.itemName}}.png\">\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Room Event Column -->\r\n        <!-- MONSTER -->\r\n        <div *ngIf=\"this.RoomEventService.roomType === 'monster' ||\r\n             this.RoomEventService.roomType === 'boss' ||\r\n              this.RoomEventService.roomType === 'finalboss'\">\r\n\r\n            <div *ngIf=\"this.RoomEventService.monsterHealthValue > 0\" class=\"avatar-column\">\r\n                <div class=\"status-box\">\r\n                    <div\r\n                        *ngIf=\"this.RoomEventService.isMonsterStunned === true && this.RoomEventService.monsterHealthValue > 0\">\r\n                        Stunned </div>\r\n                </div>\r\n\r\n                <div class=\"monster\">\r\n                    <img class=\"monster\" *ngIf=\"this.RoomEventService.isMonsterAttacking === false\"\r\n                        src=\"{{ this.RoomEventService.roomImage }}\" />\r\n                    <img class=\"monster-attacking\" *ngIf=\"this.RoomEventService.isMonsterAttacking === true\"\r\n                        src=\"{{ this.RoomEventService.roomImage }}\" />\r\n                    <img class=\"monster-claw-attacking\" *ngIf=\"this.RoomEventService.isMonsterAttacking === true\"\r\n                        src=\"assets/images/effects/Monster Claw.png\" />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <!-- monster hit effect persists outside of monsters life -->\r\n            <img *ngIf=\"this.RoomEventService.isMonsterTakeDamage === true && \r\n            this.PlayerInventoryService.weapon.itemName != 'Lightsaber'\" class=\"monster-damage-hit\"\r\n                src=\"assets/images/effects/Monster Hit Effect.png\">\r\n            <img *ngIf=\"this.RoomEventService.isMonsterTakeDamage === true && \r\n            this.PlayerInventoryService.weapon.itemName === 'Lightsaber' &&\r\n            this.RoomEventService.isPlayerTurn === true\" class=\"monster-lightsaber-hit\"\r\n                src=\"assets/images/effects/Lightsaber Effect.png\">\r\n\r\n            <!-- monster loot -->\r\n            <div class=\"avatar-column\">\r\n                <div\r\n                    *ngIf=\"this.RoomEventService.monsterHealthValue <= 0 && this.RoomEventService.isLootTaken === false && this.RoomEventService.roomType != 'finalboss'\">\r\n\r\n                    <div class=\"loot-container\">\r\n\r\n                        <div class=\"flexrow\">\r\n                            <div *ngFor=\"let loot of this.RoomEventService.roomLootList\">\r\n                                <div class=\"loot-card\"\r\n                                    [style.background-color]=\"this.PlayerInventoryService.getItemColour(loot.itemTier)\"\r\n                                    (click)=\"takeLoot(loot.itemName)\">\r\n                                    <img class=\"loot-image\" src=\"assets/images/equipment/{{loot.itemName}}.png\">\r\n                                    <a class=\"tooltipTitle\">{{loot.itemName}}<br></a>\r\n                                    <div *ngIf=\"loot.itemName === 'Torch'\"\r\n                                        class=\"specialDiv\"><br></div>\r\n                                    <a *ngIf=\"loot.itemAttackValue > 0\" class=\"tooltipText\">Attack Value:\r\n                                        {{loot.itemAttackValue}}<br></a>\r\n                                    <a *ngIf=\"loot.itemType === 'armour' || loot.itemType === 'helm' || loot.itemName === 'Wooden Buckler' || \r\n                                    loot.itemName === 'Tower Shield'\" class=\"tooltipText\">Defence Value:\r\n                                        {{loot.itemDefenceValue}}<br></a>\r\n                                    <a *ngIf=\"loot.itemType === 'food'\" class=\"tooltipText\">Heals 1 Health<br></a>\r\n                                    <a class=\"tooltipDesc\">\"{{loot.itemDescription}}\"</a>\r\n                                </div>\r\n                                <div *ngIf=\"loot.itemType != 'food'\" class=\"loot-card-tooltip\">\r\n                                    <a>Replace<br></a>\r\n                                    <div class=\"specialDiv\"></div>\r\n                                    <a *ngIf=\"loot.itemType === 'helm'\"\r\n                                        class=\"tooltipTitle\">{{this.PlayerInventoryService.helm.itemName}}<br></a>\r\n                                    <a *ngIf=\"loot.itemType === 'armour'\"\r\n                                        class=\"tooltipTitle\">{{this.PlayerInventoryService.armour.itemName}}<br></a>\r\n                                    <a *ngIf=\"loot.itemType === 'offhand'\"\r\n                                        class=\"tooltipTitle\">{{this.PlayerInventoryService.offhand.itemName}}<br></a>\r\n                                    <a *ngIf=\"loot.itemType === 'weapon'\"\r\n                                        class=\"tooltipTitle\">{{this.PlayerInventoryService.weapon.itemName}}<br></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"flexrow\">\r\n                            <div class=\"forgo-loot-button\" (click)=\"this.DungeonPathService.toggleDungeonPath()\">\r\n                                take nothing and leave\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"this.RoomEventService.monsterHealthValue <= 0\">\r\n                <img class=\"monster-dead\" src=\"{{ this.RoomEventService.roomImage }}\" />\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <!-- TREASURE -->\r\n        <div *ngIf=\"this.RoomEventService.roomType === 'treasure'\">\r\n\r\n            <!-- loot -->\r\n            <div class=\"avatar-column\">\r\n\r\n                <div class=\"loot-container\" *ngIf=\"this.RoomEventService.isLootTaken === false\">\r\n\r\n                    <div class=\"flexrow\">\r\n                        <div *ngFor=\"let loot of this.RoomEventService.roomLootList\">\r\n                            <div class=\"loot-card\"\r\n                                [style.background-color]=\"this.PlayerInventoryService.getItemColour(loot.itemTier)\"\r\n                                (click)=\"takeLoot(loot.itemName)\">\r\n                                <img class=\"loot-image\" src=\"assets/images/equipment/{{loot.itemName}}.png\">\r\n                                <a class=\"tooltipTitle\">{{loot.itemName}}<br></a>\r\n                                <div *ngIf=\"loot.itemName === 'Torch'\"\r\n                                    class=\"specialDiv\"><br></div>\r\n                                <a *ngIf=\"loot.itemAttackValue > 0\" class=\"tooltipText\">Attack Value:\r\n                                    {{loot.itemAttackValue}}<br></a>\r\n                                <a *ngIf=\"loot.itemType === 'armour' || loot.itemType === 'helm' || loot.itemName === 'Wooden Buckler' || \r\n                                    loot.itemName === 'Tower Shield'\" class=\"tooltipText\">Defence Value:\r\n                                    {{loot.itemDefenceValue}}<br></a>\r\n                                <a *ngIf=\"loot.itemType === 'food'\" class=\"tooltipText\">Heals 1 Health<br></a>\r\n                                <a class=\"tooltipDesc\">\"{{loot.itemDescription}}\"</a>\r\n                            </div>\r\n                            <div *ngIf=\"loot.itemType != 'food'\" class=\"loot-card-tooltip\">\r\n                                <a>Replace<br></a>\r\n                                <div class=\"specialDiv\"></div>\r\n                                <a *ngIf=\"loot.itemType === 'helm'\"\r\n                                    class=\"tooltipTitle\">{{this.PlayerInventoryService.helm.itemName}}<br></a>\r\n                                <a *ngIf=\"loot.itemType === 'armour'\"\r\n                                    class=\"tooltipTitle\">{{this.PlayerInventoryService.armour.itemName}}<br></a>\r\n                                <a *ngIf=\"loot.itemType === 'offhand'\"\r\n                                    class=\"tooltipTitle\">{{this.PlayerInventoryService.offhand.itemName}}<br></a>\r\n                                <a *ngIf=\"loot.itemType === 'weapon'\"\r\n                                    class=\"tooltipTitle\">{{this.PlayerInventoryService.weapon.itemName}}<br></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"flexrow\">\r\n                        <div class=\"forgo-loot-button\" (click)=\"this.DungeonPathService.toggleDungeonPath()\">\r\n                            take nothing and leave\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!-- chest image -->\r\n            <div class=\"flexrow\">\r\n                <div *ngIf=\"this.RoomEventService.roomType === 'treasure'\">\r\n                    <img id=\"treasure\" class=\"chest\" src=\"assets/images/misc/ChestClosed.png\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- FIRE -->\r\n        <div class=\"avatar-column\" *ngIf=\"this.RoomEventService.roomType === 'fire'\">\r\n            <div class=\"status-box\"> </div>\r\n            <img class=\"fire\" src=\"assets/images/misc/Fire.png\">\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!----------------------------------------- FOOTER --------------------------------------------->\r\n\r\n    <div class=\"stat-row\">\r\n\r\n        <div class=\"stat-row-spacer\">\r\n        </div>\r\n\r\n        <!-- player stats -->\r\n        <div class=\"stat-container\">\r\n            <div class=\"stat-box\">\r\n                <span class=\"stat-text\"> {{this.PlayerInventoryService.weapon.itemAttackValue}}</span>\r\n                <span class=\"iconify\" color=\"grey\" data-icon=\"mdi:sword\" data-inline=\"false\"></span>\r\n            </div>\r\n\r\n            <div class=\"stat-box\">\r\n                <span *ngIf=\"this.RoomEventService.isPlayerBlocking === true\" class=\"stat-text-green\"> {{\r\n                    this.PlayerInventoryService.playerDefence }}</span>\r\n                <span *ngIf=\"this.RoomEventService.isPlayerBlocking === false\" class=\"stat-text\"> {{\r\n                    this.PlayerInventoryService.playerDefence }}</span>\r\n                <span class=\"iconify\" color=\"grey\" data-icon=\"bx-bxs-shield\" data-inline=\"false\"></span>\r\n            </div>\r\n\r\n            <div class=\"stat-box\">\r\n                <span class=\"iconify\" color=\"red\" data-icon=\"ant-design:heart-filled\" data-inline=\"false\"></span>\r\n                <span class=\"stat-text\"> {{ this.PlayerInventoryService.playerHealth }}</span>\r\n                <div *ngIf=\"this.RoomEventService.healthChangeValue > 0\" class=\"health-pos\">\r\n                    +{{ this.RoomEventService.healthChangeValue }}\r\n                </div>\r\n                <div *ngIf=\"this.RoomEventService.healthChangeValue < 0\" class=\"health-neg\">\r\n                    {{ this.RoomEventService.healthChangeValue }}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- monster  stats -->\r\n        <div class=\"stat-container\">\r\n            <div *ngIf=\"this.RoomEventService.monsterHealthValue > 0\" class=\"stat-box\">\r\n                <span class=\"iconify\" color=\"grey\" data-icon=\"mdi:sword\" data-inline=\"false\"></span>\r\n                <span class=\"stat-text\"> {{this.RoomEventService.monsterAttackValue}}</span>\r\n            </div>\r\n            <div class=\"stat-box\">\r\n            </div>\r\n            <div *ngIf=\"this.RoomEventService.monsterHealthValue > 0\" class=\"stat-box\">\r\n                <div class=\"stat-box\">\r\n                    <span class=\"iconify\" color=\"red\" data-icon=\"ant-design:heart-filled\" data-inline=\"false\"></span>\r\n                    <span class=\"stat-text\"> {{this.RoomEventService.monsterHealthValue}}</span>\r\n                    <div *ngIf=\"this.RoomEventService.isMonsterTakeDamage === true \r\n                    && this.RoomEventService.isHandgunInUse === false\" class=\"health-neg\">\r\n                        -{{ this.RoomEventService.monsterHealthChangeValue }}\r\n                    </div>\r\n                    <div *ngIf=\"this.RoomEventService.isMonsterTakeDamage === true \r\n                    && this.RoomEventService.isHandgunInUse === true\" class=\"health-neg\">\r\n                        -1\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- START -->\r\n    <div *ngIf=\"this.RoomEventService.roomType === 'start'\">\r\n        <div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <div *ngIf=\"this.RoomEventService.roomType === 'treasure' || this.RoomEventService.roomType === 'fire'\">\r\n        <this div replaces the stat boxes for spacing -->\r\n    <!-- </div> -->\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DungeonPathService } from \"../../services/DungeonPath.service\";\r\nimport { RoomEventService } from \"../../services/RoomEvent.service\";\r\nimport { PlayerInventoryService } from \"../../services/PlayerInventory.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-room-event',\r\n  templateUrl: './room-event.component.html',\r\n  styleUrls: ['./room-event.component.css']\r\n})\r\nexport class RoomEventComponent implements OnInit {\r\n\r\n  constructor(public DungeonPathService: DungeonPathService, public RoomEventService: RoomEventService, public PlayerInventoryService: PlayerInventoryService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"set room room-event.component.ts\")\r\n    this.RoomEventService.setupRoom();\r\n  }\r\n\r\n  takeLoot(itemName) {\r\n    this.RoomEventService.takeLoot(itemName)\r\n  }\r\n\r\n  Attack() {\r\n    this.RoomEventService.isPlayerActionSubmitted = true;\r\n    this.RoomEventService.playerAttack();\r\n  }\r\n\r\n  Offhand() {\r\n    this.RoomEventService.isPlayerActionSubmitted = true;\r\n    if (this.PlayerInventoryService.offhand.itemName === \"Handgun\") {\r\n      console.log(\"do Handgun stuff\")\r\n    } else if (this.PlayerInventoryService.offhand.itemName === \"Torch\") {\r\n      console.log(\"do torch stuff\")\r\n    } else {\r\n      this.RoomEventService.playerBlock();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { Level } from '../components/Classes/Level';\r\nimport { Room } from '../components/Classes/Room';\r\nimport { Item } from '../components/Classes/Item';\r\nimport { Connection } from '../components/Classes/Connection';\r\nimport { DungeonPathService } from \"../services/DungeonPath.service\";\r\nimport { PlayerInventoryService } from \"./PlayerInventory.service\";\r\nimport { OptionsService } from \"./Options.service\";\r\nimport { element } from 'protractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class RoomEventService {\r\n\r\n  constructor(public DungeonPathService: DungeonPathService, public PlayerInventoryService: PlayerInventoryService) { }\r\n\r\n  // rooom setup\r\n  currentLevel: number | null;\r\n  currentRoom: number | null;\r\n  roomType: string | null;\r\n  roomBackground: string | null;\r\n  roomImage: string | null;\r\n  roomLootList: Item[] = [];\r\n\r\n  // combat\r\n  monsterAttackValue: number | null;\r\n  monsterHealthValue: number | null;\r\n  healAmount: number = 0;\r\n  healthChangeValue: number = 0;\r\n  monsterHealthChangeValue: number = 0;\r\n\r\n  // triggers\r\n  isLootTaken: boolean = false;\r\n  isPlayerTurn: boolean = false;\r\n  isPlayerActionSubmitted: Boolean = false;\r\n  isPlayerAttacking: boolean = false;\r\n  isPlayerBlocking: boolean = false;\r\n  isHandgunInUse: boolean = false;\r\n  isMonsterAttacking: boolean = false;\r\n  isDamageNegated: boolean = false;\r\n  isAttackAvoided: boolean = false;\r\n  isPlayerTakeDamage: boolean = false;\r\n  isMonsterTakeDamage: boolean = false;\r\n  isMonsterStunned: boolean = false;\r\n  isSoundOn: boolean = true;\r\n\r\n  playAudio(sound) {\r\n    let audio = new Audio();\r\n    audio.src = \"assets/sounds/\" + sound + \".wav\";\r\n    audio.load();\r\n    audio.play();\r\n  }\r\n\r\n  setRoomBackground() {\r\n    let BackgroundImageArray = [\r\n      \"assets/images/backgrounds/background1.png\",\r\n      \"assets/images/backgrounds/background2.png\",\r\n      \"assets/images/backgrounds/background3.png\",\r\n      \"assets/images/backgrounds/background4.png\",\r\n      \"assets/images/backgrounds/background5.png\"\r\n    ];\r\n    let random = BackgroundImageArray[Math.floor(Math.random() * BackgroundImageArray.length)];\r\n    return random;\r\n  }\r\n\r\n  setRoomImage(roomType: string) {\r\n    switch (roomType) {\r\n      case \"monster\":\r\n        let x = Math.floor((Math.random() * 6))\r\n        return \"assets/images/monsters/monster\" + x + \".png\";\r\n      case \"boss\":\r\n        let y = Math.floor((Math.random() * 6))\r\n        return \"assets/images/monsters/monster\" + y + \".png\";\r\n      case \"finalboss\":\r\n        return \"assets/images/monsters/monster6.png\";\r\n    }\r\n  }\r\n\r\n  setupRoom() {\r\n    this.DungeonPathService.levelList.forEach(level => {\r\n      level.roomList.forEach(room => {\r\n        this.roomBackground = this.setRoomBackground();\r\n        if (room.roomID === this.DungeonPathService.posID) {\r\n          // console.log(room.roomType);\r\n          this.roomType = room.roomType\r\n          this.currentLevel = room.levelNo\r\n          this.currentRoom = room.roomNo\r\n          this.healthChangeValue = 0;\r\n          if (room.roomType === \"monster\" || room.roomType === \"boss\" || room.roomType === \"finalboss\") {\r\n            this.roomImage = this.setRoomImage(this.roomType);\r\n            this.monsterAttackValue = this.setMonsterAttackValue()\r\n            this.monsterHealthValue = this.setMonsterHealthValue()\r\n            this.isMonsterTakeDamage = false;\r\n            this.isMonsterStunned = false;\r\n            this.isPlayerTurn = false;\r\n            this.AssignRoomLoot();\r\n            if (this.isSoundOn === true && this.PlayerInventoryService.offhand.itemName != 'Handgun') {\r\n              this.playAudio(\"monster-hiss\");\r\n            }\r\n            // use players handgun here\r\n            if (this.PlayerInventoryService.offhand.itemName === 'Handgun') {\r\n              this.playerUsesHandgun()\r\n              setTimeout(() => { this.monsterTurn(); }, 2000);\r\n            } else {\r\n              setTimeout(() => { this.monsterTurn(); }, 1000);\r\n            }\r\n          }\r\n          if (room.roomType === \"fire\") {\r\n            if (this.isSoundOn === true) {\r\n              this.playAudio(\"campfire\");\r\n            }\r\n            setTimeout(() => { this.getHealthFromFire(); }, 500);\r\n          }\r\n          if (room.roomType === \"treasure\") {\r\n            this.AssignRoomLoot()\r\n            if (this.isSoundOn === true) {\r\n              this.playAudio(\"chest-creak\");\r\n            }\r\n            setTimeout(() => {\r\n              document.getElementById('treasure').setAttribute('src', \"assets/images/misc/ChestOpen.png\");\r\n            }, 300);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setMonsterAttackValue() {\r\n    let currentLevel = this.currentLevel\r\n    switch (this.roomType) {\r\n      case \"monster\":\r\n        return Math.ceil((currentLevel / 4));\r\n      case \"boss\":\r\n        return Math.ceil((currentLevel / 2));\r\n      case \"finalboss\":\r\n        return Math.ceil((currentLevel / 2 - 1));\r\n    }\r\n  }\r\n\r\n  setMonsterHealthValue() {\r\n    let currentLevel = this.currentLevel\r\n    switch (this.roomType) {\r\n      case \"monster\":\r\n        return Math.ceil((currentLevel / 2));\r\n      case \"boss\":\r\n        return Math.ceil((currentLevel));\r\n      case \"finalboss\":\r\n        return Math.ceil((currentLevel - 1));\r\n    }\r\n  }\r\n\r\n  playerAttack() {\r\n    this.isPlayerBlocking = false;\r\n    this.isPlayerAttacking = true;\r\n    // attack\r\n    setTimeout(() => {\r\n      if (this.isSoundOn === true && this.PlayerInventoryService.weapon.itemTier === 1 && this.PlayerInventoryService.weapon.itemName != \"Lightsaber\") {\r\n        this.playAudio(\"monster-hit1\");\r\n      }\r\n      if (this.isSoundOn === true && this.PlayerInventoryService.weapon.itemTier > 1 && this.PlayerInventoryService.weapon.itemName != \"Lightsaber\") {\r\n        this.playAudio(\"monster-hit2\");\r\n      }\r\n      if (this.isSoundOn === true && this.PlayerInventoryService.weapon.itemName === \"Lightsaber\") {\r\n        this.playAudio(\"lightsaber-swing\");\r\n      }\r\n      // drop monster instantly\r\n      if (this.monsterHealthValue <= this.PlayerInventoryService.weapon.itemAttackValue) {\r\n        this.isMonsterTakeDamage = true;\r\n        this.monsterHealthValue = (this.monsterHealthValue - this.monsterHealthValue)\r\n      } else {\r\n        if (this.PlayerInventoryService.weapon.itemName === \"Lightsaber\" && Math.random() < 0.25) {\r\n          // console.log(\"lightsaber perk activated\")\r\n          this.isMonsterTakeDamage = true;\r\n          this.monsterHealthChangeValue = this.monsterHealthValue\r\n          this.monsterHealthValue = 0\r\n        } else {\r\n          this.isMonsterTakeDamage = true;\r\n          this.monsterHealthChangeValue = this.PlayerInventoryService.weapon.itemAttackValue\r\n          setTimeout(() => {\r\n            this.monsterHealthValue = (this.monsterHealthValue - this.PlayerInventoryService.weapon.itemAttackValue)\r\n          }, 500);\r\n        }\r\n      }\r\n    }, 250);\r\n    //move back\r\n    setTimeout(() => {\r\n      this.isPlayerAttacking = false;\r\n      // console.log(\"player hit enemy for \" + this.PlayerInventoryService.weapon.itemAttackValue + \" damage, taking health down to \" + this.monsterHealthValue);\r\n    }, 1000);\r\n    // change to monster turn\r\n    if (this.monsterHealthValue > 0) {\r\n      setTimeout(() => {\r\n        this.isMonsterTakeDamage = false;\r\n        this.monsterHealthChangeValue = 0;\r\n        this.isPlayerTurn = false\r\n        this.monsterTurn()\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  playerBlock() {\r\n    this.isPlayerBlocking = true;\r\n    this.PlayerInventoryService.playerDefence =\r\n      this.PlayerInventoryService.helm.itemDefenceValue +\r\n      this.PlayerInventoryService.armour.itemDefenceValue +\r\n      this.PlayerInventoryService.offhand.itemDefenceValue;\r\n    if (this.monsterHealthValue > 0) {\r\n      setTimeout(() => {\r\n        this.isPlayerTurn = false\r\n        this.monsterTurn()\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  playerUsesHandgun() {\r\n    // console.log(\"handgun used\")\r\n    this.isMonsterTakeDamage = false;\r\n    this.isHandgunInUse = true;\r\n    // monster take damage\r\n    setTimeout(() => {\r\n      if (this.isSoundOn === true) {\r\n        this.playAudio(\"gunshot\");\r\n      }\r\n      this.isMonsterTakeDamage = true;\r\n    }, 1000);\r\n    setTimeout(() => {\r\n      this.monsterHealthValue = (this.monsterHealthValue - 1)\r\n    }, 1500);\r\n    //wrapup\r\n    setTimeout(() => {\r\n      this.isHandgunInUse = false;\r\n      this.isMonsterTakeDamage = false;\r\n    }, 2000);\r\n  }\r\n\r\n  monsterTurn() {\r\n\r\n    // if final boss killed then end game and show win screen.\r\n    if (this.monsterHealthValue <= 0 && this.roomType === \"finalboss\") {\r\n      setTimeout(() => {\r\n        if (this.isSoundOn === true) {\r\n          this.playAudio(\"player-win2\");\r\n        }\r\n        this.PlayerInventoryService.isPlayerWon = true;\r\n        this.DungeonPathService.showDungeonPath = false;\r\n        this.DungeonPathService.showRoom = false;\r\n      }, 1000);\r\n    }\r\n\r\n    if (this.isPlayerTurn === false && this.monsterHealthValue > 0) {\r\n      if (this.isMonsterStunned === true) {\r\n        // // console.log(\" monster is stunned\");\r\n        setTimeout(() => {\r\n          this.isMonsterStunned = false;\r\n        }, 500);\r\n      } else {\r\n        // monster attacks\r\n        this.isMonsterAttacking = true;\r\n        // calculate if player avoids attack\r\n        let avoidChance = this.PlayerInventoryService.getPlayerAvoidChance();\r\n        // console.log(\"player avoidchance = \" + avoidChance)\r\n        let random = Math.random()\r\n        // console.log(\"random no = \" + random)\r\n        if (avoidChance > random) {\r\n          // monster attack misses\r\n          // console.log(\"player avoided attack\")\r\n          if (this.isSoundOn === true) {\r\n            this.playAudio(\"attack-miss\");\r\n          }\r\n          this.isAttackAvoided = true;\r\n        } else {\r\n          // monster attack hits\r\n          setTimeout(() => {\r\n            //calculate damage done\r\n            let damage = this.monsterAttackValue;\r\n            damage = damage - (this.PlayerInventoryService.playerDefence + this.PlayerInventoryService.playerBlockAmount);\r\n            if (damage <= 0) {\r\n              // // console.log(\"attack did not break armour\")\r\n              if (this.isSoundOn === true) {\r\n                this.playAudio(\"metal-hit\");\r\n              }\r\n              this.isDamageNegated = true;\r\n            } else if (damage > 0) {\r\n              // // console.log(\"attack did \" + damage + \" damage.\")\r\n              if (this.isSoundOn === true) {\r\n                this.playAudio(\"player-hit\");\r\n              }\r\n              this.isPlayerTakeDamage = true;\r\n              // will this damage kill player?\r\n              if (damage >= this.PlayerInventoryService.playerHealth && this.PlayerInventoryService.isGodmodeOn === false) {\r\n                if (this.isSoundOn === true) {\r\n                  this.playAudio(\"player-death\");\r\n                }\r\n                setTimeout(() => {\r\n                  this.PlayerInventoryService.isPlayerDead = true\r\n                  this.DungeonPathService.showDungeonPath = false;\r\n                  this.DungeonPathService.showRoom = false;\r\n                }, 2000);\r\n              }\r\n              this.healthChangeValue = - damage;\r\n              this.PlayerInventoryService.takeDamage(damage);\r\n            }\r\n            // stun monster if player block active\r\n            if (this.isPlayerBlocking === true) {\r\n\r\n              if (this.isSoundOn === true) {\r\n                this.playAudio(\"shield-block\");\r\n              }\r\n\r\n              this.isMonsterStunned = true;\r\n              this.isDamageNegated = true;\r\n            }\r\n          }, 500);\r\n        }\r\n      }\r\n\r\n      // move monster back\r\n      setTimeout(() => {\r\n        this.isAttackAvoided = false;\r\n        this.isMonsterAttacking = false;\r\n      }, 1000);\r\n      // end monsters turn\r\n      setTimeout(() => {\r\n        this.healthChangeValue = 0;\r\n        this.isDamageNegated = false;\r\n        this.isPlayerTakeDamage = false;\r\n        if (this.PlayerInventoryService.playerHealth > 0 || this.PlayerInventoryService.isGodmodeOn === true) {\r\n          this.isPlayerTurn = true;\r\n          this.isPlayerActionSubmitted = false;\r\n        }\r\n        this.isPlayerBlocking = false;\r\n        this.PlayerInventoryService.playerDefence = (this.PlayerInventoryService.helm.itemDefenceValue + this.PlayerInventoryService.armour.itemDefenceValue)\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n  getHealthFromFire() {\r\n    this.healAmount = Math.floor(Math.random() * 2) + 2;\r\n    this.PlayerInventoryService.gainHealth(this.healAmount)\r\n    this.healthChangeValue = this.healAmount;\r\n    setTimeout(() => {\r\n      this.DungeonPathService.toggleDungeonPath();\r\n      this.healthChangeValue = 0;\r\n    }, 1500);\r\n  }\r\n\r\n  AssignRoomLoot() {\r\n    this.isLootTaken = false;\r\n    this.roomLootList = []\r\n    let templist = [];\r\n    let currentlyEquipped = [this.PlayerInventoryService.helm, this.PlayerInventoryService.armour, this.PlayerInventoryService.offhand, this.PlayerInventoryService.weapon];\r\n    // create a new list based on tier level \r\n    if (this.roomType === \"treasure\" || this.roomType === \"boss\" || this.roomType === \"finalboss\") {\r\n      this.PlayerInventoryService.lootPool.forEach(element => {\r\n        if (element.itemTier >= 2) {\r\n          templist.push(element);\r\n        }\r\n      }\r\n      );\r\n    } else if (this.roomType === \"monster\") {\r\n      this.PlayerInventoryService.lootPool.forEach(element => {\r\n        if (element.itemTier <= 2) {\r\n          templist.push(element);\r\n        }\r\n      }\r\n      );\r\n    }\r\n    // select only 3 items from that list.\r\n    while (this.roomLootList.length <= 2) {\r\n      let randomItem = Math.floor(Math.random() * templist.length);\r\n      // console.log(\"the item chosen is = \" + randomItem, templist[randomItem])\r\n      // only add the item if it's not already in the list of items offered.\r\n      if (this.roomLootList.includes(templist[randomItem])) {\r\n        // do not add\r\n      } else if (currentlyEquipped.includes(templist[randomItem]) === true) {\r\n        // do not add\r\n        // console.log(templist[randomItem].itemName + \"was found in list of equipped items. And was skipped.\")\r\n      } else {\r\n        this.roomLootList.push(templist[randomItem])\r\n      }\r\n    }\r\n  }\r\n\r\n  takeLoot(itemName) {\r\n    let itemGained: Item = this.PlayerInventoryService.lootPool.find(obj => {\r\n      return obj.itemName === itemName\r\n    })\r\n    // console.log(itemGained);\r\n    if (itemGained.itemType === \"weapon\") {\r\n      this.PlayerInventoryService.weapon = itemGained;\r\n      this.PlayerInventoryService.weapon.itemAttackValue = itemGained.itemAttackValue;\r\n    }\r\n    if (itemGained.itemType === \"offhand\") {\r\n      this.PlayerInventoryService.offhand = itemGained;\r\n    }\r\n    if (itemGained.itemType === \"helm\") {\r\n      this.PlayerInventoryService.helm = itemGained;\r\n      this.PlayerInventoryService.playerDefence = (this.PlayerInventoryService.armour.itemDefenceValue + itemGained.itemDefenceValue);\r\n    }\r\n    if (itemGained.itemType === \"armour\") {\r\n      this.PlayerInventoryService.armour = itemGained;\r\n      this.PlayerInventoryService.playerDefence = (this.PlayerInventoryService.helm.itemDefenceValue + itemGained.itemDefenceValue);\r\n    }\r\n    if (itemGained.itemType === \"food\") {\r\n      this.PlayerInventoryService.gainHealth(itemGained.itemDefenceValue);\r\n      this.healthChangeValue = itemGained.itemDefenceValue;\r\n    }\r\n    this.isLootTaken = true;\r\n    setTimeout(() => {\r\n      this.isPlayerBlocking = false;\r\n      this.DungeonPathService.toggleDungeonPath();\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","<script src=\"https://code.iconify.design/1/1.0.7/iconify.min.js\"></script>\r\n\r\n\r\n<div class=\"pagecont\">\r\n\r\n    <div class=\"columnContainer\">\r\n\r\n        <!-- options -->\r\n        <app-options></app-options>\r\n\r\n        <!-- if room shown  -->\r\n        <div *ngIf=\"this.DungeonPathService.showRoom === true\">\r\n            <div class=\"flexrow\">\r\n                <app-room-event></app-room-event>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- if dungeon path shown  -->\r\n        <div *ngIf=\"this.DungeonPathService.showDungeonPath === true\">\r\n            <app-dungeon-path> </app-dungeon-path>\r\n        </div>\r\n\r\n         <!-- if title shown  -->\r\n         <div *ngIf=\"this.PlayerInventoryService.isPlayerDead === true || \r\n         this.PlayerInventoryService.isPlayerWon === true ||\r\n         this.DungeonPathService.showTitleScreen === true\">\r\n             <app-title></app-title>\r\n        </div>\r\n\r\n        <div></div>  \r\n\r\n    </div>\r\n\r\n    \r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { DungeonPathService } from \"./services/DungeonPath.service\";\r\nimport { PlayerInventoryService } from \"./services/PlayerInventory.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'DungeonPathGame';\r\n\r\n  constructor(public DungeonPathService: DungeonPathService, public PlayerInventoryService: PlayerInventoryService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DungeonPathService } from \"../services/DungeonPath.service\";\r\nimport { RoomEventService } from \"../services/RoomEvent.service\";\r\nimport { PlayerInventoryService } from \"../services/PlayerInventory.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OptionsService {\r\n\r\n  constructor(public DungeonPathService: DungeonPathService, public RoomEventService: RoomEventService, public PlayerInventoryService: PlayerInventoryService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ShowOptions: boolean = false;\r\n  HideOptions: boolean = false;\r\n \r\n  toggleOptions() {\r\n    if (this.ShowOptions === true) {\r\n      this.HideOptions = true;\r\n      this.ShowOptions = false;\r\n     setTimeout(() => {\r\n      this.HideOptions = false;}, 500)\r\n    } else if (this.ShowOptions === false) {\r\n      this.ShowOptions = true;\r\n    }\r\n  }\r\n\r\n  toggleSound() {\r\n    if (this.RoomEventService.isSoundOn === true) {\r\n      this.RoomEventService.isSoundOn = false;\r\n    } else if (this.RoomEventService.isSoundOn === false) {\r\n      this.RoomEventService.isSoundOn = true;\r\n    }\r\n  }\r\n\r\n  godMode() {\r\n    if (this.PlayerInventoryService.isGodmodeOn === true) {\r\n      this.PlayerInventoryService.isGodmodeOn = false;\r\n    } else if (this.PlayerInventoryService.isGodmodeOn === false) {\r\n      this.PlayerInventoryService.isGodmodeOn = true;\r\n    }\r\n  }\r\n\r\n  toggleDevInfo() {\r\n    this.DungeonPathService.toggleDevInfo()\r\n  }\r\n\r\n  toggleRoomGaps() {\r\n    this.DungeonPathService.toggleRoomGaps()\r\n  }\r\n\r\n  toggleDungeonPath() {\r\n    this.DungeonPathService.toggleDungeonPath()\r\n  }\r\n\r\n  generate() {\r\n    this.DungeonPathService.generateMap()\r\n    this.RoomEventService.setupRoom()\r\n  }\r\n\r\n  redrawLines() {\r\n    this.DungeonPathService.deleteLeaderLines();\r\n    setTimeout(() => {\r\n      this.DungeonPathService.makeConnections();\r\n      this.DungeonPathService.generateLeaderLines();\r\n    }, 0);\r\n  }\r\n\r\n  resetPlayerPos() {\r\n    this.DungeonPathService.resetPlayer()\r\n    this.RoomEventService.setupRoom()\r\n  }\r\n\r\n  resetAll() {\r\n    this.RoomEventService.isPlayerBlocking = false;\r\n    this.PlayerInventoryService.assignBasicLoot();\r\n    this.PlayerInventoryService.playerDefence = 0;\r\n    this.PlayerInventoryService.playerBlockAmount = 0;\r\n    this.PlayerInventoryService.playerHealth = 5;\r\n    this.RoomEventService.roomLootList = []\r\n    this.DungeonPathService.showDungeonPath = true;\r\n    this.DungeonPathService.showRoom = false;\r\n    this.DungeonPathService.showTitleScreen = false;\r\n    this.PlayerInventoryService.isPlayerDead = false;\r\n    this.PlayerInventoryService.isPlayerWon = false;\r\n    this.DungeonPathService.generateMap()\r\n    this.DungeonPathService.resetPlayer()\r\n    this.RoomEventService.setupRoom()\r\n  }\r\n\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DungeonPathComponent } from './components/DungeonPath/dungeon-path.component';\r\nimport { RoomEventComponent } from './components/room-event/room-event.component';\r\nimport { OptionsComponent } from './components/options/options.component';\r\nimport { PlayerInventoryService } from \"./services/PlayerInventory.service\";\r\nimport { DungeonPathService } from './services/DungeonPath.service';\r\nimport { RoomEventService } from './services/RoomEvent.service';\r\nimport { TitleComponent } from './components/title/title.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DungeonPathComponent,\r\n    RoomEventComponent,\r\n    OptionsComponent,\r\n    TitleComponent\r\n   \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [PlayerInventoryService, DungeonPathService, RoomEventService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n ","<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<link href=\"https://fonts.googleapis.com/css2?family=Aclonica&display=swap\" rel=\"stylesheet\">\r\n\r\n<!-- title screen -->\r\n<div *ngIf=\"this.DungeonPathService.showTitleScreen === true\" class=\"title-container\">\r\n\r\n    <div  *ngIf=\"this.isTitleDismissed === false\" class=\"title\" (click)=\"dismissTitle()\">\r\n        The Dungeon Path\r\n    </div>\r\n\r\n    <div *ngIf=\"this.isTitleDismissed === true\" class=\"titleDialog\" (click)=\"startGame()\">\r\n        You stumble away from the party to get some air and clear your head <br>\r\n        coming across a cave entrance you see no harm in taking a look inside...\r\n    </div>\r\n\r\n    <div *ngIf=\"this.isTitleDismissed === true\" >\r\n        <img class=\"avatarTitle\" src=\"assets/images/avatars/AvatarWon.png\" />\r\n    </div>\r\n\r\n    <img class=\"cave-entrance-image\" src=\"assets/images/backgrounds/backgroundentrance.png\" />\r\n\r\n</div>\r\n\r\n<!-- game over screen -->\r\n<div *ngIf=\"this.PlayerInventoryService.isPlayerDead === true\" class=\"title-container\">\r\n\r\n    <div class=\"youDiedDialog\">\r\n        YOU DIED\r\n    </div>\r\n\r\n    <div class=\"flexrow\">\r\n        <button class=\"restart-button\" (click)=\"resetAll()\">Restart</button>\r\n    </div>\r\n\r\n    <div>\r\n        <img class=\"avatarDead\" src=\"assets/images/avatars/AvatarDead.png\" />\r\n    </div>\r\n\r\n    <img class=\"cave-background-image\" src=\"assets/images/backgrounds/background2.png\" />\r\n\r\n</div>\r\n\r\n\r\n<!-- winner screen -->\r\n<div *ngIf=\"this.PlayerInventoryService.isPlayerWon === true\" class=\"title-container\">\r\n\r\n    <div class=\"youWonDialog\">\r\n        YOU WON\r\n    </div>\r\n\r\n    <div class=\"flexrow\">\r\n        <button class=\"restart-button\" (click)=\"resetAll()\">Restart</button>\r\n    </div>\r\n\r\n    <div>\r\n        <img class=\"avatarWon\" src=\"assets/images/avatars/AvatarWon.png\" />\r\n    </div>\r\n\r\n    <img class=\"cave-win-image\" src=\"assets/images/backgrounds/backgroundexit.png\" />\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DungeonPathService } from \"../../services/DungeonPath.service\";\nimport { RoomEventService } from \"../../services/RoomEvent.service\";\nimport { PlayerInventoryService } from \"../../services/PlayerInventory.service\";\nimport { OptionsService } from \"../../services/options.service\";\n\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.css']\n})\nexport class TitleComponent implements OnInit {\n\n  constructor(public DungeonPathService: DungeonPathService, \n    public RoomEventService: RoomEventService, \n    public PlayerInventoryService: PlayerInventoryService,\n    public OptionsService: OptionsService) { }\n\n  ngOnInit(): void {\n  }\n\n  isTitleDismissed: boolean = true;\n\n  resetAll() {\n    this.OptionsService.resetAll()\n  }\n\n  dismissTitle(){\n    this.isTitleDismissed = true;\n  }\n\n  startGame() {\n    console.log(\"start clicked.\")\n    this.DungeonPathService.generateMap();\n    this.PlayerInventoryService.populateLootPool();\n    this.PlayerInventoryService.assignBasicLoot();\n    this.DungeonPathService.showTitleScreen = false;\n    this.DungeonPathService.showDungeonPath = true;\n  }\n\n}\n","<div class=\"OptionsWrapper\">\r\n\r\n    <div>\r\n        <img *ngIf=\"this.OptionsService.ShowOptions === true\" class=\"showOptionsButton\" (click)=\"toggleOptions()\"\r\n            src=\"assets/images/misc/gear.png\" />\r\n        <img *ngIf=\"this.OptionsService.ShowOptions === false\" class=\"hideOptionsButton\" (click)=\"toggleOptions()\"\r\n            src=\"assets/images/misc/gear.png\" />\r\n    </div>\r\n\r\n    <div class=\"OptionButtonsContainer\" *ngIf=\"this.OptionsService.ShowOptions === true\">\r\n\r\n        <button class=\"optionButton\" (click)=\"resetAll()\">Reset All</button>\r\n\r\n        <button class=\"optionButton\" (click)=\"toggleSound()\">Sound\r\n            <a *ngIf=\"this.RoomEventService.isSoundOn === true\" [ngStyle]=\"{'color': 'lime'}\">On</a>\r\n            <a *ngIf=\"this.RoomEventService.isSoundOn === false\" [ngStyle]=\"{'color': 'red'}\">Off</a>\r\n        </button>\r\n\r\n        <button class=\"optionButton\" (click)=\"godMode()\">Godmode\r\n            <a *ngIf=\"this.PlayerInventoryService.isGodmodeOn === true\" [ngStyle]=\"{'color': 'lime'}\">On</a>\r\n            <a *ngIf=\"this.PlayerInventoryService.isGodmodeOn === false\" [ngStyle]=\"{'color': 'red'}\">Off</a>\r\n        </button>\r\n\r\n        <button class=\"optionButton\" (click)=\"toggleDungeonPath()\">Toggle Dungeon\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === true\" [ngStyle]=\"{'color': 'lime'}\">Path</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === true\" [ngStyle]=\"{'color': 'black'}\"> / Room</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === false\" [ngStyle]=\"{'color': 'black'}\">Path / </a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === false\" [ngStyle]=\"{'color': 'lime'}\">Room</a>\r\n        </button>\r\n\r\n        <button class=\"optionButton\" (click)=\"toggleDevInfo()\">Show Dev Info\r\n            <a *ngIf=\"this.DungeonPathService.showDevInfo === true\" [ngStyle]=\"{'color': 'lime'}\">On</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDevInfo === false\" [ngStyle]=\"{'color': 'red'}\">Off</a>\r\n        </button>\r\n\r\n        <button *ngIf=\"this.DungeonPathService.showDevInfo === true\" class=\"optionButton\"\r\n            (click)=\"generate()\">Regenerate Map</button>\r\n        <button *ngIf=\"this.DungeonPathService.showDevInfo === true\" class=\"optionButton\" (click)=\"redrawLines()\">Redraw\r\n            Lines</button>\r\n        <button *ngIf=\"this.DungeonPathService.showDevInfo === true\" class=\"optionButton\"\r\n            (click)=\"resetPlayerPos()\">Reset Player Pos</button>\r\n        <button *ngIf=\"this.DungeonPathService.showDevInfo === true\" class=\"optionButton\"\r\n            (click)=\"toggleRoomGaps()\">Toggle Room Gaps</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"OptionButtonsContainer\" *ngIf=\"this.OptionsService.HideOptions === true\">\r\n\r\n        <button class=\"optionButtonHide\">Reset All</button>\r\n        <button class=\"optionButtonHide\">Regenerate Map</button>\r\n        <button class=\"optionButtonHide\">Redraw Lines</button>\r\n        <button class=\"optionButtonHide\">Reset Player Pos</button>\r\n\r\n        <button class=\"optionButtonHide\">Godmode\r\n            <a *ngIf=\"this.PlayerInventoryService.isGodmodeOn === true\" [ngStyle]=\"{'color': 'lime'}\">On</a>\r\n            <a *ngIf=\"this.PlayerInventoryService.isGodmodeOn === false\" [ngStyle]=\"{'color': 'red'}\">Off</a>\r\n        </button>\r\n\r\n        <button class=\"optionButtonHide\">Toggle Dungeon\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === true\" [ngStyle]=\"{'color': 'lime'}\">Path</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === true\" [ngStyle]=\"{'color': 'black'}\"> / Room</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === false\" [ngStyle]=\"{'color': 'black'}\">Path / </a>\r\n            <a *ngIf=\"this.DungeonPathService.showDungeonPath === false\" [ngStyle]=\"{'color': 'lime'}\">Room</a>\r\n        </button>\r\n\r\n        <button class=\"optionButtonHide\">Dev Info\r\n            <a *ngIf=\"this.DungeonPathService.showDevInfo === true\" [ngStyle]=\"{'color': 'lime'}\">On</a>\r\n            <a *ngIf=\"this.DungeonPathService.showDevInfo === false\" [ngStyle]=\"{'color': 'red'}\">Off</a>\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DungeonPathService } from \"../../services/DungeonPath.service\";\r\nimport { RoomEventService } from \"../../services/RoomEvent.service\";\r\nimport { PlayerInventoryService } from \"../../services/PlayerInventory.service\";\r\nimport { OptionsService } from \"../../services/options.service\";\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.css']\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n\r\n  constructor(public OptionsService: OptionsService, public RoomEventService: RoomEventService, public DungeonPathService: DungeonPathService, public PlayerInventoryService: PlayerInventoryService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleOptions() {\r\n    this.OptionsService.toggleOptions()\r\n  }\r\n\r\n  toggleSound() {\r\n    this.OptionsService.toggleSound()\r\n  }\r\n\r\n  godMode() {\r\n    this.OptionsService.godMode()\r\n  }\r\n\r\n  toggleDevInfo() {\r\n    this.OptionsService.toggleDevInfo()\r\n  }\r\n\r\n  toggleRoomGaps() {\r\n    this.OptionsService.toggleRoomGaps()\r\n  }\r\n\r\n  toggleDungeonPath() {\r\n    this.OptionsService.toggleDungeonPath()\r\n  }\r\n\r\n  generate() {\r\n    this.OptionsService.generate()\r\n  }\r\n\r\n  redrawLines() {\r\n    this.OptionsService.redrawLines()\r\n  }\r\n\r\n  resetPlayerPos() {\r\n    this.OptionsService.resetPlayerPos()\r\n  }\r\n\r\n  resetAll() {\r\n    this.OptionsService.resetAll()\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { Level } from '../components/Classes/Level';\r\nimport { Room } from '../components/Classes/Room';\r\nimport { Connection } from '../components/Classes/Connection';\r\nimport { RoomEventService } from \"../services/RoomEvent.service\";\r\nimport { PlayerInventoryService } from \"./PlayerInventory.service\";\r\n\r\ndeclare let LeaderLine: any;\r\n\r\n@Component({\r\n  selector: 'app-leaderline',\r\n  templateUrl: '../components/leaderline/leaderline.component.html',\r\n  styleUrls: ['../components/leaderline/leaderline.component.css']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DungeonPathService {\r\n\r\n  // map building\r\n  mapSize: number | null;\r\n  LevelNo: number | null;\r\n  maxRmThisLevel: number | null;\r\n  maxRmNextLevel: number | null;\r\n  isSplitBlock: boolean = false;\r\n  isJoinBlock: boolean = true;\r\n  isCrossbackBlock: boolean = false;\r\n  rmBlockList: number[] = [];\r\n  levelList: Level[] = [];\r\n  connectionsList: Connection[] = [];\r\n  LeaderLineList: any[] = [];\r\n\r\n  // player position\r\n  posID: string = \"11\";\r\n  nextID1: string;\r\n  nextID2: string;\r\n\r\n  // options\r\n  showTitleScreen: boolean = true;\r\n  showDevInfo: boolean = false;\r\n  showRoomGaps: boolean = true;\r\n  showDungeonPath: boolean = false;\r\n  showRoom: boolean = false;\r\n\r\n  constructor(@Inject(DOCUMENT) private document, public PlayerInventoryService: PlayerInventoryService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setMapSize() {\r\n    this.mapSize = 10;\r\n  }\r\n\r\n  wipeLists() {\r\n    this.levelList.splice(0, this.levelList.length)\r\n    this.rmBlockList.splice(0, this.rmBlockList.length)\r\n  }\r\n\r\n  toggleDevInfo() {\r\n    if (this.showDevInfo === false) {\r\n      this.showDevInfo = true;\r\n    } else {\r\n      this.showDevInfo = false;\r\n    }\r\n  }\r\n\r\n  toggleRoomGaps() {\r\n    if (this.showRoomGaps === false) {\r\n      this.showRoomGaps = true;\r\n    } else {\r\n      this.showRoomGaps = false;\r\n    }\r\n  }\r\n\r\n  toggleDungeonPath() {\r\n    if (this.showDungeonPath === false) {\r\n      this.showDungeonPath = true;\r\n      this.showRoom = false;\r\n      this.makeConnections();\r\n      this.generateLeaderLines();\r\n    } else {\r\n      this.showRoom = true;\r\n      this.showDungeonPath = false;\r\n      this.deleteLeaderLines();\r\n    }\r\n  }\r\n\r\n  movePlayer(x) {\r\n    // change a room to used when leaving.\r\n    this.levelList.forEach(level => {\r\n      level.roomList.forEach(room => {\r\n        if (room.roomID === this.posID) {\r\n          room.used = true;\r\n        }\r\n      });\r\n    });\r\n    //then move the player icon.\r\n    this.posID = x;\r\n    this.nextID1 = \"00\";\r\n    this.nextID2 = \"00\";\r\n    setTimeout(() => { this.updateMoveOptions(); }, 500);\r\n    setTimeout(() => { this.toggleDungeonPath(); }, 500);\r\n  }\r\n\r\n  updateMoveOptions() {\r\n    if (this.posID !== \"101\") {\r\n      // // console.log(\"posid78341798431 = \" + this.posID)\r\n      let x = this.connectionsList.filter(conx => conx.start === this.posID)\r\n      this.nextID1 = x[0].end\r\n      // // console.log(this.nextID1);\r\n      if (x.length > 1) {\r\n        this.nextID2 = x[1].end\r\n        // // console.log(this.nextID2);\r\n      }\r\n      // // console.log(x);\r\n    } else {\r\n      // // console.log(\"final room reached.\")\r\n    }\r\n  }\r\n\r\n  resetPlayer() {\r\n    this.posID = '11';\r\n    this.nextID1 = \"21\";\r\n    this.nextID2 = \"22\";\r\n  }\r\n\r\n  // creates a room ID for a room based on level and roomNo.\r\n  createID(LvlNo: number, RmNo: number) {\r\n    let ID: string = ((LvlNo.toString()) + RmNo.toString());\r\n    return ID;\r\n  }\r\n\r\n  // this creates a list of all connections between rooms, to be used by leaderline\r\n  makeConnections() {\r\n    this.levelList.forEach(element => {\r\n      if (element.levelNo === (this.levelList.length)) {\r\n        // do nothing\r\n      } else {\r\n        element.roomList.forEach(Room => {\r\n          if (Room.conxType !== \"gap\") {\r\n            let X = new Connection(\r\n              (Room.roomID), ((Room.levelNo + 1).toString()) + (Room.conxRm1.toString())\r\n            )\r\n            this.connectionsList.push(X);\r\n            if (Room.conxRm2 > 0) {\r\n              let Y = new Connection(\r\n                (Room.roomID), ((Room.levelNo + 1).toString()) + (Room.conxRm2.toString())\r\n              )\r\n              this.connectionsList.push(Y);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    setTimeout(() => { this.generateLeaderLines(); }, 0);\r\n  }\r\n\r\n  generateLeaderLines() {\r\n    this.connectionsList.forEach(connex => {\r\n      let line2 = new LeaderLine(\r\n        LeaderLine.pointAnchor(this.document.getElementById(\"Location\" + connex.start.toString())),\r\n        LeaderLine.pointAnchor(this.document.getElementById(\"Location\" + connex.end.toString())),\r\n        {\r\n          color: 'black',\r\n          size: 30,\r\n          path: \"straight\",\r\n          startPlug: \"behind\",\r\n          endPlug: \"behind\",\r\n          startSocketGravity: [100, 0],\r\n          endSocketGravity: [0, 0]\r\n        }\r\n      );\r\n      this.LeaderLineList.push(line2);\r\n    });\r\n  }\r\n\r\n  deleteLeaderLines() {\r\n    this.LeaderLineList.forEach(line => {\r\n      line.remove();\r\n      this.LeaderLineList = [];\r\n      this.connectionsList = [];\r\n    });\r\n  }\r\n\r\n  // this assigns room types \r\n  setRoomType(lvl: number, rmNo: number) {\r\n    if (lvl === 1) {\r\n      lvl = 1;\r\n    } else if (Math.random() > 0.80 &&\r\n      lvl !== (this.mapSize / 2 + 1) &&\r\n      lvl !== (this.mapSize - 1) &&\r\n      lvl !== (this.mapSize)) {\r\n      lvl = 20;\r\n    } else if (Math.random() > 0.8 &&\r\n      lvl !== (this.mapSize / 2 + 1) &&\r\n      lvl !== (this.mapSize - 1) &&\r\n      lvl >= (this.mapSize / 2 - 1) &&\r\n      lvl !== (this.mapSize)\r\n    ) {\r\n      lvl = this.mapSize - 1;\r\n    }\r\n    switch (lvl) {\r\n      case 1:\r\n        return \"start\";\r\n      case 20:\r\n        return \"treasure\";\r\n      case (this.mapSize / 2 + 1):\r\n        return \"boss\";\r\n      case this.mapSize:\r\n        return \"finalboss\";\r\n      case this.mapSize - 1:\r\n        return \"fire\";\r\n      default:\r\n        return \"monster\";\r\n    }\r\n  }\r\n\r\n  // create random connections between standard rooms to promote more path choices. - Idea was scrapped\r\n  randomJoin(lvl: number, rmNo: number, conxRm1: number, maxRm: number) {\r\n    let newconxRm2: number = 0;\r\n    // // wipe the blocklist of all entries at level 6\r\n    // if (lvl === this.mapSize) {\r\n    //   this.rmBlockList = [];\r\n    //   return newconxRm2;\r\n    // }\r\n    // // skip if room included in block list.\r\n    // if (this.rmBlockList.includes(rmNo)) {\r\n    // } else if (lvl > 3) {\r\n    //   // if Rm = 1 then add a +1 join, and then block a join afterwards.\r\n    //   if (Math.random() > 0.3 && rmNo === 1) {\r\n    //     newconxRm2 = conxRm1 + 1;  //    +\r\n    //     this.rmBlockList.push(rmNo);\r\n    //     this.isCrossbackBlock = true;\r\n    //     this.isJoinBlock = true;\r\n    //     return newconxRm2;\r\n    //     // If Rm = Max then add a -1 join, but only if a +1 was not just added.\r\n    //   } else if (Math.random() > 0.3 && rmNo === maxRm) {\r\n    //     if (this.isCrossbackBlock === false) {\r\n    //       this.rmBlockList.push(rmNo);\r\n    //       newconxRm2 = conxRm1 - 1   //    -\r\n    //       return newconxRm2;\r\n    //     }\r\n    //     // if rmNo > 1 && < maxRm, then add a +1 or -1 \r\n    //   } else if (Math.random() > 0.3 && rmNo > 1 && rmNo < maxRm) {\r\n    //     if (Math.random() > 0.5) {\r\n    //       this.rmBlockList.push(rmNo);\r\n    //       newconxRm2 = conxRm1 + 1   //    +\r\n    //       this.isCrossbackBlock = true;\r\n    //       this.isJoinBlock = true;\r\n    //       return newconxRm2;\r\n    //     } else {\r\n    //       // if block doesnt exist then create link. if block exists then cancel block. \r\n    //       if (this.isCrossbackBlock === false) {\r\n    //         this.rmBlockList.push(rmNo);\r\n    //         newconxRm2 = conxRm1 - 1   //    -\r\n    //       }\r\n    //       this.isCrossbackBlock = false\r\n    //       return newconxRm2;\r\n    //     }\r\n    //   }\r\n    // }\r\n    return newconxRm2;\r\n  }\r\n\r\n  generateMap() {\r\n    this.deleteLeaderLines();\r\n    this.wipeLists();\r\n    this.setMapSize();\r\n    this.LevelNo = 1;\r\n    this.maxRmThisLevel = 1;\r\n    this.maxRmNextLevel = 1;\r\n    // this.PlayerInventoryService.setAvatar()\r\n    \r\n    // ========================= create levels =========================\r\n    while (this.LevelNo <= this.mapSize) {\r\n      // // console.log(\" ******** The start of level number \" + this.LevelNo)\r\n      let thislevel: Level = new Level(this.LevelNo)\r\n      var roomNo: number = 1;\r\n      var ConnectionRoomNo = 1;\r\n      this.maxRmThisLevel = this.maxRmNextLevel;\r\n\r\n      // ===================== create rooms =====================\r\n\r\n      // ========================= grow =========================\r\n      while (roomNo <= this.maxRmThisLevel && (this.LevelNo <= this.mapSize - 4)) {\r\n        // // console.log(\"grow mode\")\r\n        // // console.log(\"LevelNo  \" + this.LevelNo + \" RoomNo = \" + roomNo)\r\n        // // console.log(\"this.maxRmThisLevel \" + this.maxRmThisLevel)\r\n        // create a gap \r\n        if (roomNo === 1 && this.LevelNo <= this.mapSize / 3 && this.showRoomGaps === true) {\r\n          for (let i = ((this.mapSize / 4) - (this.maxRmThisLevel)); i >= 0; i--)\r\n            thislevel.roomList.push(new Room(this.LevelNo, 0, 0, 0, \"gap\", \"GAP1\", \"\"))\r\n        }\r\n        // if room below lvl 3 increase split rate.\r\n        if (this.LevelNo === 1) {\r\n          thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo, ConnectionRoomNo + 1, \"first\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n          roomNo += 1;\r\n          ConnectionRoomNo += 2;\r\n          this.maxRmNextLevel += 1;\r\n          this.isSplitBlock = true;\r\n        } else if ((Math.random() > 0.7) && this.LevelNo === 2 || this.maxRmThisLevel < (this.mapSize / 5)) {\r\n          thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo, ConnectionRoomNo + 1, \"splithi%\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n          roomNo += 1;\r\n          ConnectionRoomNo += 2;\r\n          this.maxRmNextLevel += 1;\r\n          this.isSplitBlock = false;\r\n        } else {\r\n          // detect if max - dont split if room number at 50% of map length  ---  use this to set map max width\r\n          if (this.maxRmThisLevel >= (this.mapSize / 2)) {\r\n            // join - or stay\r\n            if (roomNo >= 3 && Math.random() > 0.5 && this.isJoinBlock === false) {\r\n              thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo - 1, 0, \"GrJoin\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n              roomNo += 1;\r\n              this.maxRmNextLevel -= 1;\r\n              this.isJoinBlock = true;\r\n            } else {\r\n              thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo,\r\n                this.randomJoin(this.LevelNo, roomNo, ConnectionRoomNo, this.maxRmThisLevel), \"GrMax\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n              roomNo += 1;\r\n              ConnectionRoomNo += 1;\r\n              this.isJoinBlock = false;\r\n            }\r\n          } else {\r\n            // split - or stay\r\n            if (Math.random() > 0.5 && this.isSplitBlock === false) {\r\n              thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo, ConnectionRoomNo + 1, \"GrSplit\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n              roomNo += 1;\r\n              ConnectionRoomNo += 2;\r\n              this.maxRmNextLevel += 1;\r\n              this.isSplitBlock = true;\r\n            } else {\r\n              thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo,\r\n                this.randomJoin(this.LevelNo, roomNo, ConnectionRoomNo, this.maxRmThisLevel), \"GrRoom\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n              roomNo += 1;\r\n              ConnectionRoomNo += 1;\r\n              this.isSplitBlock = false;\r\n            }\r\n          }\r\n        }\r\n        // create a gap last rooms of level 1-3\r\n        if (roomNo - 1 === this.maxRmThisLevel && this.LevelNo <= this.mapSize / 3 && this.showRoomGaps === true) {\r\n          for (let i = ((this.mapSize / 4) - (this.maxRmThisLevel)); i >= 0; i--)\r\n            thislevel.roomList.push(new Room(this.LevelNo, 0, 0, 0, \"gap\", \"GAP2\", \"\"))\r\n        }\r\n      }\r\n\r\n      // ========================= shrink =========================\r\n      while (this.maxRmThisLevel > 0 && (this.LevelNo > this.mapSize - 4)) {\r\n        // // console.log(\"shrink mode\")\r\n        // // console.log(\"LevelNo  \" + this.LevelNo + \" RoomNo = \" + roomNo)\r\n        // // console.log(\"this.maxRmThisLevel \" + this.maxRmThisLevel)\r\n        let NumGapsAfterL: number = 0;\r\n        // create a gap before first room levels -3 - max level\r\n        if (roomNo === 1 && this.showRoomGaps === true) {\r\n          for (let i = ((this.mapSize / 4) - (this.maxRmThisLevel)); i >= 0; i--) {\r\n            thislevel.roomList.push(new Room(this.LevelNo, 0, 0, 0, \"gap\", \"GAP3\", \"\"));\r\n            NumGapsAfterL = NumGapsAfterL + 1;\r\n          }\r\n        }\r\n        // join all rooms to final room\r\n        if (this.LevelNo === (this.mapSize - 1)) {\r\n          thislevel.roomList.push(new Room(this.LevelNo, roomNo, 1, 0, \"2ndlast\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n          roomNo += 1;\r\n          ConnectionRoomNo += 1;\r\n          this.maxRmNextLevel = 1;\r\n          // join\r\n        } else if (Math.random() > 0.6 && roomNo !== 1 && this.isJoinBlock === false) {\r\n          thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo - 1, 0, \"ShJoin\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n          roomNo += 1;\r\n          this.maxRmNextLevel -= 1;\r\n          this.isJoinBlock = true;\r\n        } else {\r\n          thislevel.roomList.push(new Room(this.LevelNo, roomNo, ConnectionRoomNo, 0, \"ShRoom\", this.setRoomType(this.LevelNo, roomNo), this.createID(this.LevelNo, roomNo)))\r\n          roomNo += 1;\r\n          ConnectionRoomNo += 1;\r\n          this.isJoinBlock = false;\r\n        }\r\n        // create a gap after last rooms of final levels.\r\n        if (this.maxRmThisLevel === 1 && this.LevelNo >= this.mapSize / 2 && this.showRoomGaps === true) {\r\n          for (let i = ((this.mapSize / 4) - roomNo + 1); i >= 0; i--) {\r\n            // // console.log(\"i1 =  \" + i);\r\n            thislevel.roomList.push(new Room(this.LevelNo, 0, 0, 0, \"gap\", \"GAP4\", \"\"));\r\n          }\r\n        }\r\n        this.maxRmThisLevel -= 1;\r\n      }\r\n      // console.log(\" ******** the end of level number \" + this.LevelNo)\r\n      // console.log(this.levelList)\r\n      // console.log(\"this.maxRmThisLevel \" + this.maxRmThisLevel)\r\n      // console.log(\"this.roomNo \" + roomNo)\r\n      this.LevelNo += 1;\r\n      this.levelList.push(thislevel);\r\n    }\r\n\r\n    // console.log(\"================ end of map draw ================\")\r\n    // console.log(this.levelList)\r\n    this.makeConnections();\r\n    this.updateMoveOptions();\r\n  }\r\n\r\n}\r\n","x","<div class=\"DPContainer\" id=\"DPContainer\">\r\n\r\n   <!---------------------//draw levels ------------------------>\r\n   <div class=\"level\" *ngFor=\"let level of DungeonPathService.levelList\">\r\n      <!-- <div *ngIf=\"DungeonPathService.showDevInfo == true\"> -->\r\n      <!-- Level {{ this.level.levelNo }} -->\r\n      <!-- </div> -->\r\n      <!---------------------//draw rooms ------------------------>\r\n      <div *ngFor=\"let room of level.roomList\" attr.id=\"Location{{room.roomID}}\">\r\n\r\n         <!-- draw a random gap -->\r\n         <div *ngIf=\"room.roomNo === 0\">\r\n            <div [ngClass]=\"{'randomgap': DungeonPathService.showDevInfo === true}\"\r\n               *ngIf=\"DungeonPathService.showDevInfo == true\">\r\n               <p> lv {{room.levelNo}} rm {{room.roomNo}} tp {{ room.roomType }}</p>\r\n            </div>\r\n         </div>\r\n\r\n         <!-- draw a room -->\r\n         <div class=\"flexrow\">\r\n\r\n            <div class=\"room\" *ngIf=\"room.roomNo !== 0\">\r\n\r\n               <div *ngIf=\"DungeonPathService.showDevInfo === true && room.roomNo !== 0\">\r\n                  lv {{room.levelNo}} <br>\r\n                  rm {{room.roomNo}}<br>\r\n                  {{room.roomID}}<br>\r\n                  {{room.conxType}}\r\n                  {{room.roomType}}\r\n               </div>\r\n\r\n               <button\r\n                  *ngIf=\"room.roomID === (DungeonPathService.nextID1) || room.roomID === (DungeonPathService.nextID2)\"\r\n                  class=\"rmButton\" id=\"button\" (click)=\"movePlayer(room.roomID)\">\r\n               </button>\r\n\r\n               <div class=\"player\" *ngIf=\"room.roomID === DungeonPathService.posID\">\r\n                  <img class=\"playerIcon\" src=\"assets/images/avatars/ManIcon2.png\">\r\n               </div> \r\n\r\n               <div *ngIf=\"DungeonPathService.showDevInfo === false && room.roomNo !== 0\">\r\n                  <span *ngIf=\"room.roomType === 'start'\">\r\n                  </span>\r\n                  <span *ngIf=\"room.roomType === 'monster'\" class=\"iconify\" data-icon=\"ri-skull-2-line\"\r\n                     data-inline=\"false\">\r\n                  </span>\r\n                  <span *ngIf=\"room.roomType === 'boss'\" class=\"iconify\" color=\"orange\" data-icon=\"ri-skull-2-line\"\r\n                     data-inline=\"false\"></span>\r\n                  <span *ngIf=\"room.roomType === 'finalboss'\" class=\"iconify\" color=\"red\" data-icon=\"ri-skull-2-line\"\r\n                     data-inline=\"false\"></span>\r\n                  <span *ngIf=\"room.roomType === 'treasure'\" class=\"iconify\" color=\"gold\" data-icon=\"mdi-treasure-chest\"\r\n                     data-inline=\"false\"></span>\r\n                  <span *ngIf=\"room.roomType === 'fire'\" class=\"iconify\" color=\"red\" data-icon=\"majesticons:fire\"\r\n                     data-inline=\"false\"></span>\r\n               </div>\r\n               <div *ngIf=\"room.used === true\" class=\"used\"></div>\r\n               <div class=\"nextroominfo\" *ngIf=\"DungeonPathService.showDevInfo === true && room.roomNo !== 0\">\r\n                  {{room.conxRm1}} <br>\r\n                  {{room.conxRm2}}\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n   </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DungeonPathService } from \"../../services/DungeonPath.service\";\nimport { RoomEventService } from \"../../services/RoomEvent.service\";\nimport { PlayerInventoryService } from \"../../services/PlayerInventory.service\";\n\n@Component({\n    selector: 'app-dungeon-path',\n    templateUrl: './dungeon-path.component.html',\n    styleUrls: ['./dungeon-path.component.css']\n})\n\nexport class DungeonPathComponent implements OnInit {\n\n    constructor(public DungeonPathService: DungeonPathService, public RoomEventService: RoomEventService) { }\n\n    ngOnInit(): void {\n    }\n\n    movePlayer(x){\n        this.DungeonPathService.movePlayer(x)\n    }\n    \n \n}\n","\r\nexport class Connection {\r\n    start: string;\r\n    end: string;\r\n\r\n    \r\n    constructor(_start: string, _end: string)\r\n        {\r\n        this.start = _start;\r\n        this.end = _end;\r\n        }\r\n}\r\n\r\n","\r\nexport class Room {\r\n     levelNo: number;\r\n     roomNo: number;\r\n     conxRm1: number;\r\n     conxRm2: number;\r\n     conxType: string;\r\n     roomType: string;\r\n     used: boolean = false;\r\n     roomID: string;\r\n\r\n     constructor(_levelNo: number, _roomNo: number, _conxRm1: number, _conxRm2: number, _conxType: string, _roomType:string, _roomID: string) \r\n          \r\n          {\r\n          this.levelNo = _levelNo;\r\n          this.roomNo = _roomNo;\r\n          this.conxRm1 = _conxRm1;\r\n          this.conxRm2 = _conxRm2;\r\n          this.conxType = _conxType;\r\n          this.roomType = _roomType;\r\n          this.roomID = _roomID;\r\n          }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Connection } from '../components/Classes/Connection';\r\nimport { RoomEventService } from \"./RoomEvent.service\";\r\nimport { Item } from '../components/Classes/Item';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerInventoryService {\r\n\r\n  weapon: Item;\r\n  offhand: Item;\r\n  helm: Item;\r\n  armour: Item;\r\n\r\n  playerHealth: number = 5;\r\n  playerDefence: number = 0;\r\n  playerBlockAmount: number = 0;\r\n  playerAvatar: string = \"assets/images/avatars/Avatar1.png\";\r\n\r\n  isGodmodeOn: boolean = false;\r\n  isPlayerDead: boolean = false;\r\n  isPlayerWon: boolean = false;\r\n\r\n  lootPool: Item[] = [];\r\n\r\n  constructor() { }\r\n\r\n  populateLootPool() {\r\n\r\n    //foods\r\n    this.lootPool.push(new Item(\"food\", \"Painkillers\", \"You are in a computer game, Max.\", 0, 0, 1,)),\r\n      this.lootPool.push(new Item(\"food\", \"Heart Container\", \"Hey, Listen!\", 0, 0, 1)),\r\n      this.lootPool.push(new Item(\"food\", \"Mushroom\", \"Wahoo!\", 0, 0, 1)),\r\n      this.lootPool.push(new Item(\"food\", \"Rations\", \"Do you think love can bloom, even on a battlefield?\", 0, 0, 1)),\r\n\r\n      // weapons\r\n      // t1\r\n      this.lootPool.push(new Item(\"weapon\", \"Fist\", \"Just wail on 'em\", 1, 1, 0)),\r\n      this.lootPool.push(new Item(\"weapon\", \"Bottle\", \"The empty beer bottle you brought with you\", 1, 1, 0)),\r\n      this.lootPool.push(new Item(\"weapon\", \"Rock\", \"A rock you found on the floor\", 1, 1, 0)),\r\n      // t2\r\n      this.lootPool.push(new Item(\"weapon\", \"Baseball Bat\", \"Hey, batter batter!\", 2, 2, 0)),\r\n      this.lootPool.push(new Item(\"weapon\", \"Meat Cleaver\", \"For cleaving meat\", 2, 2, 0)),\r\n      this.lootPool.push(new Item(\"weapon\", \"Hatchet\", \"A small hatchet\", 2, 2, 0)),\r\n      //t3\r\n      this.lootPool.push(new Item(\"weapon\", \"Swordfish\", \"How did this get in here?\", 3, 3, 0)),\r\n      this.lootPool.push(new Item(\"weapon\", \"Claymore\", \"A two handed greatsword\", 3, 3, 0)),\r\n      // this.lootPool.push(new Item(\"weapon\", \"Great Axe\", \"A two handed greataxe\", 3, 3, 0)),\r\n      // t4\r\n      this.lootPool.push(new Item(\"weapon\", \"Lightsaber\", \"Has a 25% chance to decapitate. Vrooom!\", 4, 3, 0)),\r\n\r\n      // armour\r\n      this.lootPool.push(new Item(\"armour\", \"Potato Sack\", \"Smells musty\", 1, 0, 0)),\r\n      this.lootPool.push(new Item(\"armour\", \"Dinner Shirt\", \"It's not pink, it's salmon!\", 1, 0, 0)),\r\n      this.lootPool.push(new Item(\"armour\", \"Shirtless\", \"As nature intended\", 1, 0, 0)),\r\n\r\n      this.lootPool.push(new Item(\"armour\", \"Leather Armour\", \"Reduces damage taken by 1\", 2, 0, 1)),\r\n      this.lootPool.push(new Item(\"armour\", \"Steel Plate\", \"Reduces damage taken by 2\", 3, 0, 2)),\r\n      this.lootPool.push(new Item(\"armour\", \"Plot Armour\", \"50% chance to avoid attacks.\", 4, 0, 0)),\r\n\r\n      // offhands\r\n      this.lootPool.push(new Item(\"offhand\", \"Wooden Buckler\", \"A small buckler that blocks 1 damage and stuns enemies on a successful block\", 1, 0, 1)),\r\n      this.lootPool.push(new Item(\"offhand\", \"Tower Shield\", \"A large shield that blocks 2 damage and stuns enemies on a successful block\", 2, 0, 2)),\r\n\r\n      this.lootPool.push(new Item(\"offhand\", \"Handgun\", \"Passive: Shoot first when entering a room\", 4, 1, 0)),\r\n      this.lootPool.push(new Item(\"offhand\", \"Torch\", \"Passive: 25% chance to dazzle an enemy causing them to miss\", 4, 0, 0)),\r\n\r\n      // helms\r\n      this.lootPool.push(new Item(\"helm\", \"Beanie\", \"Keeps you warm, has a pom-pom\", 1, 0, 0)),\r\n      this.lootPool.push(new Item(\"helm\", \"Plastic Viking Helmet\", \"It's a bit too small. Made of plastic\", 1, 0, 0)),\r\n      this.lootPool.push(new Item(\"helm\", \"Christmas Hat\", \"It had flashing lights but the batteries have died\", 1, 0, 0)),\r\n\r\n      this.lootPool.push(new Item(\"helm\", \"Soup Pot\", \"It almost covers your head\", 2, 0, 1)),\r\n      this.lootPool.push(new Item(\"helm\", \"Miners Helmet\", \"25% chance to dazzle an emeny causing them to miss\", 4, 0, 1))\r\n  }\r\n\r\n  getItemColour(tier) {\r\n    switch (tier) {\r\n      case 0:\r\n        return \"rgb(131, 214, 98)\";\r\n      case 1:\r\n        return \"rgb(124, 124, 124)\";\r\n      case 2:\r\n        return \"rgb(52, 99, 175)\";\r\n      case 3:\r\n        return \"rgb(175, 163, 52)\";\r\n      case 4:\r\n        return \"rgb(154, 64, 195)\";\r\n    }\r\n  }\r\n\r\n  assignBasicLoot() {\r\n    let t1Weps: Item[] = this.lootPool.filter(element => element.itemType === \"weapon\" && element.itemTier === 1);\r\n    let randomW = Math.floor(Math.random() * t1Weps.length);\r\n    this.weapon = (t1Weps[randomW])\r\n    let t1Helms: Item[] = this.lootPool.filter(element => element.itemType === \"helm\" && element.itemTier === 1);\r\n    let randomH = Math.floor(Math.random() * t1Helms.length);\r\n    this.helm = (t1Helms[randomH])\r\n    let t1Armour: Item[] = this.lootPool.filter(element => element.itemType === \"armour\" && element.itemTier === 1);\r\n    let randomA = Math.floor(Math.random() * t1Armour.length);\r\n    this.armour = (t1Armour[randomA])\r\n    this.offhand = this.lootPool.find(element => element.itemName === \"Wooden Buckler\")\r\n  }\r\n\r\n  gainHealth(heal: number) {\r\n    setTimeout(() => {\r\n      this.playerHealth += heal;\r\n    }, 750);\r\n  }\r\n\r\n  takeDamage(damageDealt: number) {\r\n    if (damageDealt >= this.playerHealth) {\r\n      this.playerHealth = this.playerHealth - damageDealt;\r\n    } else {\r\n      setTimeout(() => {\r\n        this.playerHealth = this.playerHealth - damageDealt;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  getPlayerAvoidChance() {\r\n    let result: number = 0;\r\n    if (this.offhand.itemName == \"Torch\") {\r\n      result += .25\r\n    }\r\n    if (this.helm.itemName == \"Miners Helmet\") {\r\n      result += .25\r\n    }\r\n    if (this.armour.itemName == \"Plot Armour\") {\r\n      result += .5\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DungeonPathComponent } from './components/DungeonPath/dungeon-path.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: \"DungeonPathComponent\", component: DungeonPathComponent },\r\n  // { path: \"**\", redirectTo: \"TitleComponent\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}